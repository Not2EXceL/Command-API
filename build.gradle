import org.apache.tools.ant.filters.ReplaceTokens

group 'com.minecave'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'

ext.author = 'not2excel'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: '0.12.1218'
    }
}

configurations {
    provided
    compile.extendsFrom provided
}

repositories {
    mavenCentral()
    mavenLocal()
}

processResources {
    filter { line -> line.replace('${', '@').replace('}', '@') }
    filter ReplaceTokens, tokens: [
            "plugin.name"     : 'Command-API',
            "plugin.version"  : project.version,
            "plugin.mainClass": 'io.not2excel.kotlin.CommandAPI',
            "plugin.author"   : author
    ]
}

dependencies {
    provided group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '0.12.1218'
    provided group: 'org.spigotmc', name: 'spigot-api', version: '1.8.7-R0.1-SNAPSHOT'
}

task fatJar(dependsOn: ':build', type: Jar) {
    baseName = project.name + '-fatjar'
    from {
        (configurations.runtime - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        //exclude "something to exclude"
    }
    with jar
}

task migrateBuiltModule(dependsOn: ':fatJar', type: Copy) {
    destinationDir = file("./")

    into("./out") {
        from(tasks.withType(Jar).collect())
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

task createPom << {
    pom {
        project {
            groupId 'com.minecave'
            artifactId 'kotlin-loader'
            version '1.0-SNAPSHOT'
        }
    }.writeTo("pom.xml")
}
